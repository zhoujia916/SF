<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:db.properties" />

	<!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${db_driver}" />
        <property name="url" value="${db_url}" />
        <property name="username" value="${db_username}" />
        <property name="password" value="${db_password}" />

        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${db_initialSize}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${db_maxActive}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${db_minIdle}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${db_maxWait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超过时间限制多长回收 -->
        <property name="removeAbandonedTimeout" value="180" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
        <property name="validationQuery" value="SELECT 1" />
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="0" />
        -->

        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="stat" />
    </bean>

    <bean id="dataSourceDbcp" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db_driver}" />
        <property name="url" value="${db_url}" />
        <property name="username" value="${db_username}" />
        <property name="password" value="${db_password}" />
        <property name="maxActive" value="${db_maxActive}" />
        <property name="maxIdle" value="${db_maxIdle}" />
        <property name="maxWait" value="${db_maxWait}" />
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name ="configLocation" value ="classpath:mybatis.xml" />
        <!-- 自动扫描mapping映射文件-->
        <property name="mapperLocations" value="classpath:/mapper/*.xml"></property>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <bean id="sqlMapper" class="puzzle.sf.mapper.SqlMapper" />

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="puzzle.sf.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*"	      propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*"	      propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*"	      propagation="SUPPORTS" read-only="true" />
            <tx:method name="query*"	  propagation="SUPPORTS" read-only="true" />
            <tx:method name="logInsert"	  propagation="SUPPORTS" />

            <tx:method name="execute*"	  propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="create*"     propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="save*"	      propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="update*"     propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="remove*"     propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="delete*"     propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="sent*"       propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="send*"       propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="add*"        propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="insert*"     propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="do*"         propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceMethods" expression="execution(* puzzle.sf.service..*.*(..))" />
        <aop:advisor pointcut-ref="serviceMethods" advice-ref="txAdvice" />
    </aop:config>

    <!-- 映射包扫描 -->
    <bean class ="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name ="basePackage" value ="puzzle.sf.mapper" />
    </bean >
</beans>